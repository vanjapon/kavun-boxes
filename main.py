import telebot
from telebot import types
import json
import random
import time

from flask import Flask
from threading import Thread

app = Flask('')

@app.route('/')
def home():
    return "I'm alive"

def run():
    app.run(host='0.0.0.0', port=80)

def keep_alive():
    t = Thread(target=run)
    t.start()

last_request_time = {}
user_info = {}

def update_loot():
    return {
        'loot1': random.randint(1, 3),
        'loot2': random.randint(3, 5),
        'loot3': random.randint(5, 10),
        'loot4': random.randint(10, 15),
        'loot5': random.randint(15, 25),
        'loot6': random.randint(25, 40),
        'loot7': random.randint(40, 70),
        'loot8': random.randint(150, 300),
        'loot9': random.randint(700, 1500)
    }

video_messages_commonbox = {
    '–í–∏–¥–µ–æ 1 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': {'—Å–æ–æ–±—â–µ–Ω–∏–µ': '–¥–æ–¥–æ–¥–æ\n–æ–±—ã—á–Ω—ã–π\n+{loot1} –∞—Ä–±—É–∑–æ–≤üçâ', 'arbuzy_key': 'loot1'},
    '–í–∏–¥–µ–æ 2 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': {'—Å–æ–æ–±—â–µ–Ω–∏–µ': '—Å–∫—Ä–æ–º–Ω—ã–π –º–∞–Ω–∫–µ\n–æ–±—ã—á–Ω—ã–π\n+{loot2} –∞—Ä–±—É–∑–æ–≤üçâ', 'arbuzy_key': 'loot2'},
    '–í–∏–¥–µ–æ 3 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': {'—Å–æ–æ–±—â–µ–Ω–∏–µ': '–¥–∂–µ–Ω—Ç–µ–ª—å–º–µ–Ω –º–∞–Ω–∫–µ\n–Ω–µ–æ–±—ã—á–Ω—ã–π\n+{loot3} –∞—Ä–±—É–∑–æ–≤üçâ', 'arbuzy_key': 'loot3'},
    '–í–∏–¥–µ–æ 4 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': {'—Å–æ–æ–±—â–µ–Ω–∏–µ': '–º–∞–Ω–∫–µ –Ω–∞ –≤–µ–ª–∏–∫–µ\n–Ω–µ–æ–±—ã—á–Ω—ã–π\n+{loot4} –∞—Ä–±—É–∑–æ–≤üçâ', 'arbuzy_key': 'loot4'},
    '–í–∏–¥–µ–æ 5 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': {'—Å–æ–æ–±—â–µ–Ω–∏–µ': '–º–º–º –º–æ–ª–æ—á–∫–æ\n—Ä–µ–¥–∫–∏–π\n+{loot5} –∞—Ä–±—É–∑–æ–≤üçâ', 'arbuzy_key': 'loot5'},
    '–í–∏–¥–µ–æ 6 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': {'—Å–æ–æ–±—â–µ–Ω–∏–µ': '–∞–∞–∞–∞ —Ä–∞–ø–µ–∫\n—Ä–µ–¥–∫–∏–π\n+{loot6} –∞—Ä–±—É–∑–æ–≤üçâ', 'arbuzy_key': 'loot6'},
    '–í–∏–¥–µ–æ 7 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': {'—Å–æ–æ–±—â–µ–Ω–∏–µ': '–Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π –ø–æ–Ω\n—ç–ø–∏—á–µ—Å–∫–∏–π\n+{loot7} –∞—Ä–±—É–∑–æ–≤üçâ', 'arbuzy_key': 'loot7'},
    '–í–∏–¥–µ–æ 8 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': {'—Å–æ–æ–±—â–µ–Ω–∏–µ': '–º–æ–¥–Ω—ã–π –º–∞–Ω–∫–µ\n–ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π\n+{loot8} –∞—Ä–±—É–∑–æ–≤üçâ', 'arbuzy_key': 'loot8'},
    '–í–∏–¥–µ–æ 9 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': {'—Å–æ–æ–±—â–µ–Ω–∏–µ': '—Ä—ã–±–∞–∫ –º–∞–Ω–∫–µ\n–ø–∞—Å—Ö–∞–ª–æ—á–∫–∞\n+{loot9} –∞—Ä–±—É–∑–æ–≤üçâ', 'arbuzy_key': 'loot9'}
}

video_chances_commonbox = {
    '–í–∏–¥–µ–æ 1 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': 0.75,
    '–í–∏–¥–µ–æ 2 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': 0.6,
    '–í–∏–¥–µ–æ 3 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': 0.53,
    '–í–∏–¥–µ–æ 4 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': 0.4,
    '–í–∏–¥–µ–æ 5 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': 0.33,
    '–í–∏–¥–µ–æ 6 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': 0.26,
    '–í–∏–¥–µ–æ 7 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': 0.12,
    '–í–∏–¥–µ–æ 8 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': 0.03,
    '–í–∏–¥–µ–æ 9 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': 0.001
}

video_paths_commonbox = {
    '–í–∏–¥–µ–æ 1 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': '–¥–æ–¥–æ–¥–æ.MP4',
    '–í–∏–¥–µ–æ 2 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': '—Å–∫—Ä–æ–º–Ω–∏ –º–∞–Ω–∫–µ.MP4',
    '–í–∏–¥–µ–æ 3 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': '–¥–∂–µ–Ω—Ç–µ–ª—å–º–µ–Ω –º–∞–Ω–∫–µ.MP4',
    '–í–∏–¥–µ–æ 4 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': '–º–∞–Ω–∫–µ –Ω–∞ –≤–µ–ª–∏–∫–µ.MP4',
    '–í–∏–¥–µ–æ 5 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': '–º–º–º –º–∞–ª–∞—á–∫–æ.MP4',
    '–í–∏–¥–µ–æ 6 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': '–∞–∞–∞–∞ —Ä–∞–ø–µ–∫.mp4',
    '–í–∏–¥–µ–æ 7 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': '–Ω–∞–≤–∞–≥–æ–¥–Ω–∏ –ø–æ–Ω.mp4',
    '–í–∏–¥–µ–æ 8 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': '–º–æ–¥–Ω–∏ –º–∞–Ω–∫–µ.mp4',
    '–í–∏–¥–µ–æ 9 –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å': '—Ä—ã–±–∞–∫ –º–∞–Ω–∫–µ.mp4'
}

def load_user_info():
    try:
        with open('user_info.json', 'r') as file:
            data = json.load(file)
            return data
    except (FileNotFoundError, json.decoder.JSONDecodeError):
        print("–§–∞–π–ª user_info –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å.")
        return {}
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ user_info: {e}")
        return {}

def save_user_info():
        try:
            with open('user_info.json', 'w') as file:
                json.dump(user_info, file)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ user_info: {e}")

open('user_info.json', 'a').close()
user_info = load_user_info()

def change_user_info(user_id, username=None, watermelons=0, redeemed_promo_reliz=None):
    global user_info

    try:
        with open('user_info.json', 'r') as file:
            user_info = json.load(file)
    except (FileNotFoundError, json.decoder.JSONDecodeError):
        print("User_info file not found or JSON decode error. Continuing with the existing data.")

    user_data = user_info.setdefault(user_id, {'username': None, 'watermelons': 0, 'redeemed_promo_reliz': 0})

    print(f"Before update - user_data: {user_data}")

    if username is not None:
        user_data['username'] = username

    user_data['watermelons'] += watermelons

    if redeemed_promo_reliz is not None:
        user_data['redeemed_promo_reliz'] = redeemed_promo_reliz

    print(f"After update - user_data: {user_data}")

    try:
        with open('user_info.json', 'w') as file:
            json.dump(user_info, file)
    except Exception as e:
        print(f"Error saving user_info: {e}")

bot = telebot.TeleBot('6700775574:AAE8TFF8yCYHpHkDN59rZuCbubibBHPCBDE')

@bot.message_handler(commands=['start'])
def start_handler(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('üì¶–û—Ç–∫—Ä—ã—Ç—å –æ–±—ã—á–Ω—ã–π –ë–æ–∫—Å')
    button2 = types.KeyboardButton('üçå–ù–∞—à —á–∞—Ç–∏–∫')
    button3 = types.KeyboardButton('üçâ–ë–∞–ª–∞–Ω—Å –∞—Ä–±—É–∑–æ–≤')
    button4 = types.KeyboardButton('‚ùì–†–µ–¥–∫–æ—Å—Ç–∏')
    markup.add(button1, button2)
    markup.add(button3, button4)
    bot.send_message(message.chat.id, f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞—Ä–±—É–∑–Ω—ã–µ –±–æ–∫—Å—ã, {message.from_user.first_name}!\n–ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ–º–æ–∫–æ–¥ /reliz –≤ —á–µ—Å—Ç—å —Ä–µ–ª–∏–∑–∞ –±–æ—Ç–∞!', reply_markup=markup)

@bot.message_handler(commands=['reliz'])
def reliz_promo(message):
    global user_info
    user_id = str(message.from_user.id)
    user_data = user_info.get(user_id, {})
    promo_redeemed = user_data.get('redeemed_promo_reliz', 0)
    if promo_redeemed == 1:
        bot.send_message(message.chat.id, '–¢—ã —É–∂–µ –≤–≤–æ–¥–∏–ª –ø—Ä–æ–º–æ!')
    else:
        change_user_info(user_id, username=message.from_user.username, watermelons=100, redeemed_promo_reliz=1)
        bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ –ø—Ä–æ–º–æ –∏ –ø–æ–ª—É—á–∏–ª–∏ 100 –∞—Ä–±—É–∑–æ–≤!')

@bot.message_handler(content_types=['text'])
def cmds(message):
    print(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text}")
    if message.text == 'üçå–ù–∞—à —á–∞—Ç–∏–∫':
        bot.send_message(message.chat.id, 'https://t.me/arbuzerichat')
    elif message.text == 'üì¶–û—Ç–∫—Ä—ã—Ç—å –æ–±—ã—á–Ω—ã–π –ë–æ–∫—Å':
        last_request = last_request_time.get(message.chat.id, 0)
        current_time = time.time()
        time_remaining = max(0, 5 - (current_time - last_request))
        if time_remaining > 0:
            bot.send_message(message.chat.id, f'–ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â—ë {time_remaining:.1f} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∫–ª–∏–∫–æ–º!')
            return

        print("–û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –æ–±—ã—á–Ω—ã–π –±–æ–∫—Å...")
        last_request_time[message.chat.id] = current_time
        user_id = str(message.from_user.id)
        video_to_send = random.choices(list(video_chances_commonbox.keys()), weights=list(video_chances_commonbox.values()))[0]

        if video_to_send in video_messages_commonbox:
            loot = update_loot()
            change_user_info(user_id, username=message.from_user.username, watermelons=loot[video_messages_commonbox[video_to_send]['arbuzy_key']])

            current_message = video_messages_commonbox[video_to_send]['—Å–æ–æ–±—â–µ–Ω–∏–µ'].format(**loot)
            markup = types.ReplyKeyboardRemove()

            markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1 = types.KeyboardButton('üì¶–û—Ç–∫—Ä—ã—Ç—å –æ–±—ã—á–Ω—ã–π –ë–æ–∫—Å')
            button2 = types.KeyboardButton('üçå–ù–∞—à —á–∞—Ç–∏–∫')
            button3 = types.KeyboardButton('üçâ–ë–∞–ª–∞–Ω—Å –∞—Ä–±—É–∑–æ–≤')
            button4 = types.KeyboardButton('‚ùì–†–µ–¥–∫–æ—Å—Ç–∏')
            markup2.add(button1, button2)
            markup2.add(button3, button4)

            bot.send_message(message.chat.id, '–í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è...\n–ï—Å–ª–∏ —Å—Ä–∞–∑—É –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å, —Ç–æ –ø–æ–¥–æ–∂–¥–∏—Ç–µ 5-10 —Å–µ–∫.', reply_markup=markup)
            bot.send_video(message.chat.id, open(video_paths_commonbox[video_to_send], 'rb'), caption=current_message, reply_markup=markup2)
            print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤–∏–¥–µ–æ: {video_to_send}")
        else:
            bot.send_message(message.chat.id, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –≤–∏–¥–µ–æ!')
            print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –≤–∏–¥–µ–æ: {video_to_send}")

    elif message.text == 'üçâ–ë–∞–ª–∞–Ω—Å –∞—Ä–±—É–∑–æ–≤':
        global user_info
        user_id = str(message.from_user.id)
        user_data = user_info.get(user_id, {})
        watermelon_balance = user_data.get('watermelons', 0)
        bot.send_message(message.chat.id, f'–£ —Ç–µ–±—è {watermelon_balance} –∞—Ä–±—É–∑–æ–≤')
    elif message.text == '‚ùì–†–µ–¥–∫–æ—Å—Ç–∏':
        bot.send_message(message.chat.id, '–û–±—ã—á–Ω—ã–π: 75-60%\n–ù–µ–æ–±—ã—á–Ω—ã–π: 53-40%\n–†–µ–¥–∫–∏–π: 33-26%\n–≠–ø–∏—á–µ—Å–∫–∏–π: 12%\n–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π: 3%\n–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–æ–Ω–∫–µ –æ –∫–æ—Ç–æ—Ä–æ–º —Ç—É—Ç –Ω–µ –≥–æ–≤–æ—Ä–∏—Ç—Å—è')

keep_alive()
bot.polling()